{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,0GAA0G;AAC1G,iFAAiF;AACjF,OAAO,uCAAuC,MAAM,2CAA2C,CAAC;AAEhG;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAqB,EAAE;IAC5D,OAAO,uCAAuC,CAAC,KAAK,EAAE,CAAC;AACzD,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,IAAI,EAAE;IAClD,IAAI,CAAC;QACH,MAAM,uBAAuB,EAAE,CAAC;QAChC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,6BAA6B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrE,CAAC;AACH,CAAC,CAAC","sourcesContent":["// Import the native module. On web, it will be resolved to ReactNativeLocalNetworkPermissionModule.web.ts\n// and on native platforms to ReactNativeLocalNetworkPermissionModule.PLATFORM.ts\nimport ReactNativeLocalNetworkPermissionModule from './ReactNativeLocalNetworkPermissionModule';\n\n/**\n * The following function also will trigger the local network permission dialog if it did not show up before.\n *\n * If the permission was not granted, the result will be false.\n * If the permission was granted, the result will be true.\n *\n * NOTE: This function is only applicable to iOS, on other platforms nothing will happen.\n */\nexport const checkLocalNetworkAccess = (): Promise<boolean> => {\n  return ReactNativeLocalNetworkPermissionModule.check();\n};\n\n/**\n * The following function will trigger the local network permission dialog if it did not show up before.\n */\nexport const requestLocalNetworkAccess = async () => {\n  try {\n    await checkLocalNetworkAccess();\n    return Promise.resolve();\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(`requestLocalNetworkAccess ${JSON.stringify(error)}`);\n  }\n};\n"]}