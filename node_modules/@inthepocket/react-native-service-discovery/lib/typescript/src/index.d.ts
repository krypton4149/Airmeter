export interface Service {
    readonly name: string;
    readonly type: string;
    readonly domain: string;
    readonly hostName: string;
    readonly addresses: string[];
    readonly port: number;
    readonly txt: Record<string, string>;
}
export type ServiceEvent = 'serviceFound' | 'serviceLost' | 'error';
export type ServiceCallback = (service: Service) => void;
export interface Subscription {
    remove: () => void;
}
export declare const addEventListener: (event: ServiceEvent, listener: ServiceCallback) => Subscription;
export declare const startSearch: (serviceType: string) => Promise<void>;
export declare const stopSearch: (serviceType: string) => Promise<void>;
//# sourceMappingURL=index.d.ts.map