"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stopSearch = exports.startSearch = exports.addEventListener = void 0;
var _reactNative = require("react-native");
const LINKING_ERROR = `The package '@inthepocket/react-native-service-discovery' doesn't seem to be linked. Make sure: \n\n` + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo Go\n';

// @ts-expect-error
const isTurboModuleEnabled = global.__turboModuleProxy != null;
const ServiceDiscoveryModule = isTurboModuleEnabled ? require('./NativeServiceDiscovery').default : _reactNative.NativeModules.ServiceDiscovery;
const ServiceDiscovery = ServiceDiscoveryModule ? ServiceDiscoveryModule : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
const EventEmitter = new _reactNative.NativeEventEmitter(ServiceDiscovery);
const addEventListener = (event, listener) => EventEmitter.addListener(event, listener);
exports.addEventListener = addEventListener;
const startSearch = serviceType => ServiceDiscovery.startSearch(serviceType);
exports.startSearch = startSearch;
const stopSearch = serviceType => ServiceDiscovery.stopSearch(serviceType);
exports.stopSearch = stopSearch;
//# sourceMappingURL=index.js.map