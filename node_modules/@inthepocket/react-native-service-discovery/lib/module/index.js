import { NativeEventEmitter, NativeModules, Platform } from 'react-native';
const LINKING_ERROR = `The package '@inthepocket/react-native-service-discovery' doesn't seem to be linked. Make sure: \n\n` + Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo Go\n';

// @ts-expect-error
const isTurboModuleEnabled = global.__turboModuleProxy != null;
const ServiceDiscoveryModule = isTurboModuleEnabled ? require('./NativeServiceDiscovery').default : NativeModules.ServiceDiscovery;
const ServiceDiscovery = ServiceDiscoveryModule ? ServiceDiscoveryModule : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
const EventEmitter = new NativeEventEmitter(ServiceDiscovery);
export const addEventListener = (event, listener) => EventEmitter.addListener(event, listener);
export const startSearch = serviceType => ServiceDiscovery.startSearch(serviceType);
export const stopSearch = serviceType => ServiceDiscovery.stopSearch(serviceType);
//# sourceMappingURL=index.js.map