import type { IDevice } from './interfaces/IDevice.interface';
import type { IPortScanner } from './interfaces/IPortScanner.interface';
declare class PortScanner {
    _listeners: Array<any>;
    readonly ports: number[];
    readonly timeout: number;
    readonly onDeviceFound: (device: IDevice) => void;
    readonly onFinish: (devices: IDevice[]) => void;
    readonly onCheck: (device: IDevice) => void;
    readonly onNoDevices: () => void;
    readonly onError: (error: string) => void;
    static cancelDiscovering: () => void;
    static getLocalDevices: () => void;
    init: () => void;
    constructor({ ports, timeout, onDeviceFound, onFinish, onCheck, onNoDevices, onError, }: IPortScanner);
    start: () => void;
    stop: () => void;
}
export default PortScanner;
export { type IDevice, type IPortScanner };
//# sourceMappingURL=index.d.ts.map